#include <abi/errno.h>

namespace __cxxabiv1 {

#ifdef _TEST
int errno;
#else
thread_local int errno;
#endif

#define ERR_STR(e)	#e
const char*const sys_errlist[] = {
    ERR_STR(EOK),  // No error.
    ERR_STR(E2BIG),
    ERR_STR(EACCES),
    ERR_STR(EADDRINUSE),
    ERR_STR(EADDRNOTAVAIL),
    ERR_STR(EAFNOSUPPORT),
    ERR_STR(EAGAIN),
    ERR_STR(EALREADY),
    ERR_STR(EBADF),
    ERR_STR(EBADMSG),
    ERR_STR(EBUSY),
    ERR_STR(ECANCELED),
    ERR_STR(ECHILD),
    ERR_STR(ECONNABORTED),
    ERR_STR(ECONNREFUSED),
    ERR_STR(ECONNRESET),
    ERR_STR(EDEADLK),
    ERR_STR(EDESTADDRREQ),
    ERR_STR(EDOM),
    ERR_STR(EDQUOT),
    ERR_STR(EEXIST),
    ERR_STR(EFAULT),
    ERR_STR(EFBIG),
    ERR_STR(EHOSTUNREACH),
    ERR_STR(EIDRM),
    ERR_STR(EILSEQ),
    ERR_STR(EINPROGRESS),
    ERR_STR(EINTR),
    ERR_STR(EINVAL),
    ERR_STR(EIO),
    ERR_STR(EISCONN),
    ERR_STR(EISDIR),
    ERR_STR(ELOOP),
    ERR_STR(EMFILE),
    ERR_STR(EMLINK),
    ERR_STR(EMSGSIZE),
    ERR_STR(EMULTIHOP),
    ERR_STR(ENAMETOOLONG),
    ERR_STR(ENETDOWN),
    ERR_STR(ENETRESET),
    ERR_STR(ENETUNREACH),
    ERR_STR(ENFILE),
    ERR_STR(ENOBUFS),
    ERR_STR(ENODATA),
    ERR_STR(ENODEV),
    ERR_STR(ENOENT),
    ERR_STR(ENOEXEC),
    ERR_STR(ENOLCK),
    ERR_STR(ENOLINK),
    ERR_STR(ENOMEM),
    ERR_STR(ENOMSG),
    ERR_STR(ENOPROTOOPT),
    ERR_STR(ENOSPC),
    ERR_STR(ENOSR),
    ERR_STR(ENOSTR),
    ERR_STR(ENOSYS),
    ERR_STR(ENOTCONN),
    ERR_STR(ENOTDIR),
    ERR_STR(ENOTEMPTY),
    ERR_STR(ENOTRECOVERABLE),
    ERR_STR(ENOTSOCK),
    ERR_STR(ENOTSUP),
    ERR_STR(ENOTTY),
    ERR_STR(ENXIO),
    ERR_STR(EOPNOTSUPP),
    ERR_STR(EOVERFLOW),
    ERR_STR(EOWNERDEAD),
    ERR_STR(EPERM),
    ERR_STR(EPIPE),
    ERR_STR(EPROTO),
    ERR_STR(EPROTONOSUPPORT),
    ERR_STR(EPROTOTYPE),
    ERR_STR(ERANGE),
    ERR_STR(EROFS),
    ERR_STR(ESPIPE),
    ERR_STR(ESRCH),
    ERR_STR(ESTALE),
    ERR_STR(ETIME),
    ERR_STR(ETIMEDOUT),
    ERR_STR(ETXTBSY),
    ERR_STR(EWOULDBLOCK),
    ERR_STR(EXDEV),
  };

const int sys_nerr = sizeof(sys_errlist) / sizeof(sys_errlist[0]);

} /* namespace __cxxabiv1 */
