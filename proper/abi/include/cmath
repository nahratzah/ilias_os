#ifndef _CMATH_
#define _CMATH_

#include <cdecl.h>

_namespace_begin(std)
_cdecl_begin

#if FLT_EVAL_METHOD == 0
typedef float float_t;
typedef double double_t;
#elif FLT_EVAL_METHOD == 1
typedef double float_t;
typedef double double_t;
#elif FLT_EVAL_METHOD == 2
typedef long double float_t;
typedef long double double_t;
#endif

#define M_El         (2.7182818284590452353602874713526624977572470936999595L)
#define M_LOG2El     (1.4426950408889634073599246810018921374266459541529859L)
#define M_LOG10El    (0.4342944819032518276511289189166050822943970058036665L)
#define M_LN2l       (0.6931471805599453094172321214581765680755001343602552L)
#define M_LN10l      (2.3025850929940456840179914546843642076011014886287729L)
#define M_PIl        (3.1415926535897932384626433832795028841971693993751058L)
#define M_PI_2l      (1.5707963267948966192313216916397514420985846996875529L)
#define M_PI_4l      (0.7853981633974483096156608458198757210492923498437764L)
#define M_1_PIl      (0.3183098861837906715377675267450287240689192914809128L)
#define M_2_PIl      (0.6366197723675813430755350534900574481378385829618257L)
#define M_2_SQRTPIl  (1.1283791670955125738961589031215451716881012586579977L)
#define M_SQRT2l     (1.4142135623730950488016887242096980785696718753769480L)
#define M_SQRT1_2l   (0.7071067811865475244008443621048490392848359376884740L)

#define M_E         ((double)M_El)
#define M_LOG2E     ((double)M_LOG2El)
#define M_LOG10E    ((double)M_LOG10El)
#define M_LN2       ((double)M_LN2l)
#define M_LN10      ((double)M_LN10l)
#define M_PI        ((double)M_PIl)
#define M_PI_2      ((double)M_PI_2l)
#define M_PI_4      ((double)M_PI_4l)
#define M_1_PI      ((double)M_1_PIl)
#define M_2_PI      ((double)M_2_PIl)
#define M_2_SQRTPI  ((double)M_2_SQRTPIl)
#define M_SQRT2     ((double)M_SQRT2l)
#define M_SQRT1_2   ((double)M_SQRT1_2l)

#if 0 // XXX
#define FP_FAST_FMA       ...
#define FP_FAST_FMAF      ...
#define FP_FAST_FMAL      ...
#define FP_ILOGB0         ...
#define FP_ILOGBNAN       ...
#define FP_INFINITE       ...
#define FP_NAN            ...
#define FP_NORMAL         ...
#define FP_SUBNORMAL      ...
#define FP_ZERO           ...
#define HUGE_VAL          ...
#define HUGE_VALF         ...
#define HUGE_VALL         ...
#define INFINITY          ...
#define NAN               ...
#define math_errhandling  ...
#endif // 0

#define MATH_ERRNO        (1)
#define MATH_ERREXCEPT    (2)


double      acos(double) noexcept;
float       acosf(float) noexcept;
long double acosl(long double) noexcept;

double      acosh(double) noexcept;
float       acoshf(float) noexcept;
long double acoshl(long double) noexcept;

float       asin(float) noexcept;
double      asinf(double) noexcept;
long double asinl(long double) noexcept;

double      asinh(double) noexcept;
float       asinhf(float) noexcept;
long double asinhl(long double) noexcept;

double      atan(double) noexcept;
float       atanf(float) noexcept;
long double atanl(long double) noexcept;

double      atan2(double, double) noexcept;
float       atan2f(float, float) noexcept;
long double atan2l(long double, long double) noexcept;

double      atanh(double) noexcept;
float       atanhf(float) noexcept;
long double atanhl(long double) noexcept;

double      cbrt(double) noexcept;
float       cbrtf(float) noexcept;
long double cbrtl(long double) noexcept;

double      ceil(double) noexcept;
float       ceilf(float) noexcept;
long double ceill(long double) noexcept;

double      copysign(double) noexcept;
float       copysignf(float) noexcept;
long double copysignl(long double) noexcept;

double      cos(double) noexcept;
float       cosf(float) noexcept;
long double cosl(long double) noexcept;

double      cosh(double) noexcept;
float       coshf(float) noexcept;
long double coshl(long double) noexcept;

double      erf(double) noexcept;
float       erff(float) noexcept;
long double erfl(long double) noexcept;

double      erfc(double) noexcept;
float       erfcf(float) noexcept;
long double erfcl(long double) noexcept;

double      exp(double) noexcept;
float       expf(float) noexcept;
long double expl(long double) noexcept;

double      exp2(double) noexcept;
float       exp2f(float) noexcept;
long double exp2l(long double) noexcept;

double      expm1(double) noexcept;
float       expm1f(float) noexcept;
long double expm1l(long double) noexcept;

double      fabs(double) noexcept;
float       fabsf(float) noexcept;
long double fabsl(long double) noexcept;

double      fdim(double, double) noexcept;
float       fdimf(float, float) noexcept;
long double fdiml(long double, long double) noexcept;

double      floor(double) noexcept;
float       floorf(float) noexcept;
long double floorl(long double) noexcept;

double      fma(double, double, double) noexcept;
float       fmaf(float, float, float) noexcept;
long double fmal(long double, long double, long double) noexcept;

double      fmax(double, double) noexcept;
float       fmaxf(float, float) noexcept;
long double fmaxl(long double, long double) noexcept;

double      fmin(double, double) noexcept;
float       fminf(float, float) noexcept;
long double fminl(long double, long double) noexcept;

double      fmod(double, double) noexcept;
float       fmodf(float, float) noexcept;
long double fmodl(long double, long double) noexcept;

double      frexp(double, int*) noexcept;
float       frexpf(float, int*) noexcept;
long double frexpl(long double, int*) noexcept;

double      hypot(double, double) noexcept;
float       hypotf(float, float) noexcept;
long double hypotl(long double, long double) noexcept;

double      ilogb(double) noexcept;
float       ilogbf(float) noexcept;
long double ilogbl(long double) noexcept;

double      j0(double) noexcept;
double      j1(double) noexcept;
double      jn(int, double) noexcept;

double      ldexp(double, int) noexcept;
float       ldexpf(float, int) noexcept;
long double ldexpl(long double, int) noexcept;

double      lgamma(double) noexcept;
float       lgammaf(float) noexcept;
long double lgammal(long double) noexcept;

double      llrint(double) noexcept;
float       llrintf(float) noexcept;
long double llrintl(long double) noexcept;

double      llround(double) noexcept;
float       llroundf(float) noexcept;
long double llroundl(long double) noexcept;

double      log(double) noexcept;
float       logf(float) noexcept;
long double logl(long double) noexcept;

double      log10(double) noexcept;
float       log10f(float) noexcept;
long double log10l(long double) noexcept;

double      log1p(double) noexcept;
float       log1pf(float) noexcept;
long double log1pl(long double) noexcept;

double      log2(double) noexcept;
float       log2f(float) noexcept;
long double log2l(long double) noexcept;

double      logb(double) noexcept;
float       logbf(float) noexcept;
long double logbl(long double) noexcept;

double      lrint(double) noexcept;
float       lrintf(float) noexcept;
long double lrintl(long double) noexcept;

double      lround(double) noexcept;
float       lroundf(float) noexcept;
long double lroundl(long double) noexcept;

double      modf(double, double*) noexcept;
float       modff(float, float*) noexcept;
long double modfl(long double, long double*) noexcept;

double      nan(const char*) noexcept;
float       nanf(const char*) noexcept;
long double nanl(const char*) noexcept;

double      nearbyint(double) noexcept;
float       nearbyintf(float) noexcept;
long double nearbyintl(long double) noexcept;

double      nextafter(double, double) noexcept;
float       nextafterf(float, float) noexcept;
long double nextafterl(long double, long double) noexcept;

double      nexttoward(double, long double) noexcept;
float       nexttowardf(float, long double) noexcept;
long double nexttowardl(long double, long double) noexcept;

double      pow(double, double) noexcept;
float       powf(float, float) noexcept;
long double powl(long double, long double) noexcept;

double      remainder(double, double) noexcept;
float       remainderf(float, float) noexcept;
long double remainderl(long double, long double) noexcept;

double      remquo(double, double, int*) noexcept;
float       remquof(float, float, int*) noexcept;
long double remquol(long double, long double, int*) noexcept;

double      rint(double) noexcept;
float       rintf(float) noexcept;
long double rintl(long double) noexcept;

double      round(double) noexcept;
float       roundf(float) noexcept;
long double roundl(long double) noexcept;

double      scalbln(double, long) noexcept;
float       scalblnf(float, long) noexcept;
long double scalblnl(long double, long) noexcept;

double      scalbn(double, int) noexcept;
float       scalbnf(float, int) noexcept;
long double scalbnl(long double, int) noexcept;

double      sin(double) noexcept;
float       sinf(float) noexcept;
long double sinl(long double) noexcept;

double      sinh(double) noexcept;
float       sinhf(float) noexcept;
long double sinhl(long double) noexcept;

double      sqrt(double) noexcept;
float       sqrtf(float) noexcept;
long double sqrtl(long double) noexcept;

double      tan(double) noexcept;
float       tanf(float) noexcept;
long double tanl(long double) noexcept;

double      tanh(double) noexcept;
float       tanhf(float) noexcept;
long double tanhl(long double) noexcept;

double      tgamma(double) noexcept;
float       tgammaf(float) noexcept;
long double tgammal(long double) noexcept;

double      trunc(double) noexcept;
float       truncf(float) noexcept;
long double truncl(long double) noexcept;

double      y0(double) noexcept;
double      y1(double) noexcept;
double      yn(double) noexcept;


extern int signgam;


#if 0
#define fpclassify(x)
#define isfinite(x)
#define isgreater(x, y)
#define isgreaterequal(x, y)
#define isinf(x)
#define isless(x, y)
#define islessequal(x, y)
#define islessgreater(x, y)
#define isnan(x)
#define isnormal(x)
#define isunordered(x)
#define signbit(x)
#endif


_cdecl_end

#ifdef __cplusplus
inline double abs(double x) noexcept { return fabs(x); }
#endif

_namespace_end(std)

#if !defined(_TEST) && defined(__cplusplus)
using std::acos;
using std::acosf;
using std::acosh;
using std::acoshf;
using std::asin;
using std::asinh;
using std::atan;
using std::atan2;
using std::atanh;
using std::cbrt;
using std::ceil;
using std::copysign;
using std::cos;
using std::cosh;
using std::erf;
using std::erfc;
using std::exp2;
using std::exp;
using std::expm1;
using std::fabs;
using std::fdim;
using std::floor;
using std::fma;
using std::fmax;
using std::fmin;
using std::fmod;
using std::frexp;
using std::hypot;
using std::ilogb;
using std::ldexp;
using std::lgamma;
using std::llrint;
using std::llround;
using std::log;
using std::log10;
using std::log1p;
using std::log2;
using std::logb;
using std::lrint;
using std::lround;
using std::modf;
using std::nan;
using std::nanf;
using std::nanl;
using std::nearbyint;
using std::nextafter;
using std::nexttoward;
using std::pow;
using std::remainder;
using std::remquo;
using std::rint;
using std::round;
using std::scalbln;
using std::scalbn;
using std::sin;
using std::sinh;
using std::sqrt;
using std::tan;
using std::tanh;
using std::tgamma;
using std::trunc;
#endif /* !_TEST && __cplusplus */

#endif /* _CMATH_ */
