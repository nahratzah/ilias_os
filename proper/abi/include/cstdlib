#ifndef _CSTDLIB_
#define _CSTDLIB_

#include <cdecl.h>
#include <cstddef>

_namespace_begin(std)
_cdecl_begin

void abort() noexcept __attribute__((__noreturn__));
int atexit(void (*)()) noexcept;
int at_quick_exit(void (*)()) noexcept;
void exit(int) noexcept __attribute__((__noreturn__));
void quick_exit(int) noexcept __attribute__((__noreturn__));

void* malloc(size_t) noexcept;
void* calloc(size_t, size_t) noexcept;
void free(void*) noexcept;
void* realloc(void*, size_t) noexcept;
void* reallocarray(void*, size_t, size_t) noexcept;

void qsort(void*, size_t, size_t, int (*)(const void*, const void*));
void* bsearch(const void*, const void*, size_t, size_t,
              int (*)(const void*, const void*));

_cdecl_end
_namespace_end(std)

#if !defined(_TEST) && defined(__cplusplus)
using std::abort;
using std::atexit;
using std::at_quick_exit;
using std::exit;
using std::quick_exit;
using std::malloc;
using std::calloc;
using std::free;
using std::realloc;
using std::reallocarray;
using std::qsort;
using std::bsearch;
#endif /* !_TEST && __cplusplus */

#endif /* _CSTDLIB_ */
