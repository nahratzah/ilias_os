#ifndef CSTDINT
#define CSTDINT

#include <abi/abi.h>
#include <cstddef_misc/intptr.h>
#include <climits>

#ifdef __cplusplus
namespace std {
#endif


typedef _TYPES(uint8_t)		uint8_t;
typedef _TYPES(int8_t)		int8_t;
typedef _TYPES(uint16_t)	uint16_t;
typedef _TYPES(int16_t)		int16_t;
typedef _TYPES(uint32_t)	uint32_t;
typedef _TYPES(int32_t)		int32_t;
typedef _TYPES(uint64_t)	uint64_t;
typedef _TYPES(int64_t)		int64_t;
#if _USE_INT128
typedef _TYPES(uint128_t)	uint128_t;
typedef _TYPES(int128_t)	int128_t;
#endif
typedef _TYPES(uintmax_t)	uintmax_t;
typedef _TYPES(intmax_t)	intmax_t;
typedef _TYPES(sig_atomic_t)	sig_atomic_t;

typedef uint8_t			uint_least8_t;
typedef int8_t			int_least8_t;
typedef uint16_t		uint_least16_t;
typedef int16_t			int_least16_t;
typedef uint32_t		uint_least32_t;
typedef int32_t			int_least32_t;
typedef uint64_t		uint_least64_t;
typedef int64_t			int_least64_t;
#if _USE_INT128
typedef uint128_t		uint_least128_t;
typedef int128_t		int_least128_t;
#endif

typedef uint8_t			uint_fast8_t;
typedef int8_t			int_fast8_t;
typedef uint16_t		uint_fast16_t;
typedef int16_t			int_fast16_t;
typedef uint32_t		uint_fast32_t;
typedef int32_t			int_fast32_t;
typedef uint64_t		uint_fast64_t;
typedef int64_t			int_fast64_t;
#if _USE_INT128
typedef uint128_t		uint_fast128_t;
typedef int128_t		int_fast128_t;
#endif

typedef uint8_t			u_int8_t;
typedef uint16_t		u_int16_t;
typedef uint32_t		u_int32_t;
typedef uint64_t		u_int64_t;
#if _USE_INT128
typedef uint128_t		u_int128_t;
#endif


#ifdef __cplusplus
} /* namespace std */

using std::uint8_t;
using std::int8_t;
using std::uint16_t;
using std::int16_t;
using std::uint32_t;
using std::int32_t;
using std::uint64_t;
using std::int64_t;
#if _USE_INT128
using std::uint128_t;
using std::int128_t;
#endif
using std::uintmax_t;
using std::intmax_t;
using std::sig_atomic_t;

using std::uint_least8_t;
using std::int_least8_t;
using std::uint_least16_t;
using std::int_least16_t;
using std::uint_least32_t;
using std::int_least32_t;
using std::uint_least64_t;
using std::int_least64_t;
#if _USE_INT128
using std::uint_least128_t;
using std::int_least128_t;
#endif

using std::uint_fast8_t;
using std::int_fast8_t;
using std::uint_fast16_t;
using std::int_fast16_t;
using std::uint_fast32_t;
using std::int_fast32_t;
using std::uint_fast64_t;
using std::int_fast64_t;
#if _USE_INT128
using std::uint_fast128_t;
using std::int_fast128_t;
#endif

using std::u_int8_t;
using std::u_int16_t;
using std::u_int32_t;
using std::u_int64_t;
#if _USE_INT128
using std::u_int128_t;
#endif
#endif /* __cplusplus */

#define INT8_C(x)		(x)
#define UINT8_C(x)		(x##U)
#define INT16_C(x)		(x)
#define UINT16_C(x)		(x##U)
#define INT32_C(x)		(x)
#define UINT32_C(x)		(x##U)
#define INT64_C(x)		(x##LL)
#define UINT64_C(x)		(x##ULL)
#define INTMAX_C(x)		(x##LL)
#define UINTMAX_C(x)		(x##ULL)

#define INT8_MIN		SCHAR_MIN
#define INT8_MAX		SCHAR_MAX
#define INT16_MIN		SHRT_MIN
#define INT16_MAX		SHRT_MAX
#define INT32_MIN		INT_MIN
#define INT32_MAX		INT_MAX
#define INT64_MIN		LLONG_MIN
#define INT64_MAX		LLONG_MAX
#if _USE_INT128
# define INT128_MIN		(-INT128_MAX - 1)
# define INT128_MAX		((int128_t(INT64_MAX) << 64) | UINT64_MAX)
#endif
#define UINT8_MAX		UCHAR_MAX
#define UINT16_MAX		USHRT_MAX
#define UINT32_MAX		UINT_MAX
#define UINT64_MAX		ULLONG_MAX
#if _USE_INT128
# define UINT128_MAX		(uint128_t(-1))
#endif

#define INT_FAST8_MIN		SCHAR_MIN
#define INT_FAST8_MAX		SCHAR_MAX
#define INT_FAST16_MIN		SHRT_MIN
#define INT_FAST16_MAX		SHRT_MAX
#define INT_FAST32_MIN		INT_MIN
#define INT_FAST32_MAX		INT_MAX
#define INT_FAST64_MIN		LLONG_MIN
#define INT_FAST64_MAX		LLONG_MAX
#if _USE_INT128
# define INT_FAST128_MIN	INT128_MIN
# define INT_FAST128_MAX	INT128_MAX
#endif

#define INT_LEAST8_MIN		SCHAR_MIN
#define INT_LEAST8_MAX		SCHAR_MAX
#define INT_LEAST16_MIN		SHRT_MIN
#define INT_LEAST16_MAX		SHRT_MAX
#define INT_LEAST32_MIN		INT_MIN
#define INT_LEAST32_MAX		INT_MAX
#define INT_LEAST64_MIN		LLONG_MIN
#define INT_LEAST64_MAX		LLONG_MAX
#if _USE_INT128
# define INT_LEAST128_MIN	INT128_MIN
# define INT_LEAST128_MAX	INT128_MAX
#endif

#define UINT_FAST8_MAX		UCHAR_MAX
#define UINT_FAST16_MAX		USHRT_MAX
#define UINT_FAST32_MAX		UINT_MAX
#define UINT_FAST64_MAX		ULLONG_MAX
#if _USE_INT128
# define UINT_FAST128_MAX	UINT128_MAX
#endif

#define UINT_LEAST8_MAX		UCHAR_MAX
#define UINT_LEAST16_MAX	USHRT_MAX
#define UINT_LEAST32_MAX	UINT_MAX
#define UINT_LEAST64_MAX	ULLONG_MAX
#if _USE_INT128
# define UINT_LEAST128_MAX	UINT128_MAX
#endif

#if _USE_INT128
# define INTMAX_MIN		INT128_MIN
# define INTMAX_MAX		INT128_MAX
# define UINTMAX_MAX		UINT128_MAX
#else
# define INTMAX_MIN		INT64_MIN
# define INTMAX_MAX		INT64_MAX
# define UINTMAX_MAX		UINT64_MAX
#endif

#ifdef __LP64__
#define INTPTR_MIN		LONG_MIN
#define INTPTR_MAX		LONG_MAX
#define UINTPTR_MAX		ULONG_MAX
#else
#define INTPTR_MIN		INT_MIN
#define INTPTR_MAX		INT_MAX
#define UINTPTR_MAX		UINT_MAX
#endif

#define PTRDIFF_MIN		(-__PTRDIFF_MAX - 1)
#define PTRDIFF_MAX		__PTRDIFF_MAX
#define SIG_ATOMIC_MIN		INT_MIN
#define SIG_ATOMIC_MAX		INT_MAX
#define WINT_MIN		__WINT_MIN__
#define WINT_MAX		__WINT_MAX__


#endif /* CSTDINT */
