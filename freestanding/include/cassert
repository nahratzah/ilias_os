#ifndef ASSERT_H
#define ASSERT_H

#include <cdecl.h>
#include <panic.h>

_cdecl_begin

inline void _assert_test(bool p, const char* file, const char* func, int line,
                         const char* pred, const char* optmsg) {
  if (_predict_false(!p))
    kernel::panic("Assertion at %s:%d  %s() failed:  %s%s%s", file, line, func,
                  pred, (optmsg ? "  ||  " : ""), (optmsg ? optmsg : ""));
}

_cdecl_end


#ifdef NDEBUG
# define assert(pred)	do { /* nothing */ } while (0)
#elif __cplusplus
# define assert(pred)							\
         do {								\
           _assert_test(bool(pred), __FILE__, __func__, __LINE__,	\
                        #pred, nullptr);				\
         } while (0)
#else
# define assert(pred)							\
         do {								\
           _assert_test(pred, __FILE__, __func__, __LINE__,		\
                        #pred, nullptr);				\
         } while (0)
#endif


#endif /* ASSERT_H */
